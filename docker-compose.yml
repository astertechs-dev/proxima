version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: proxima-postgres
    environment:
      POSTGRES_DB: proxima
      POSTGRES_USER: proxima_user
      POSTGRES_PASSWORD: proxima_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - proxima-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: proxima-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: proxima_user
      MONGO_INITDB_ROOT_PASSWORD: proxima_password
      MONGO_INITDB_DATABASE: proxima
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./db/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - proxima-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: proxima-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - proxima-network

  # User Service (Go)
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: proxima-user-service
    environment:
      - DATABASE_URL=postgres://proxima_user:proxima_password@postgres:5432/proxima?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
      - PORT=8001
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
    networks:
      - proxima-network

  # Job Service (Go)
  job-service:
    build:
      context: ./backend/job-service
      dockerfile: Dockerfile
    container_name: proxima-job-service
    environment:
      - DATABASE_URL=postgres://proxima_user:proxima_password@postgres:5432/proxima?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - PORT=8002
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - redis
    networks:
      - proxima-network

  # Match Service (Python)
  match-service:
    build:
      context: ./backend/match-service
      dockerfile: Dockerfile
    container_name: proxima-match-service
    environment:
      - DATABASE_URL=postgresql://proxima_user:proxima_password@postgres:5432/proxima
      - MONGODB_URL=mongodb://proxima_user:proxima_password@mongodb:27017/proxima
      - REDIS_URL=redis://redis:6379
      - PORT=8003
    ports:
      - "8003:8003"
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - proxima-network

  # AI/ML Service (Python)
  ai-service:
    build:
      context: ./backend/ai-service
      dockerfile: Dockerfile
    container_name: proxima-ai-service
    environment:
      - MONGODB_URL=mongodb://proxima_user:proxima_password@mongodb:27017/proxima
      - REDIS_URL=redis://redis:6379
      - PORT=8004
    ports:
      - "8004:8004"
    depends_on:
      - mongodb
      - redis
    networks:
      - proxima-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: proxima-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - proxima-network

  # API Gateway (Nginx)
  api-gateway:
    image: nginx:alpine
    container_name: proxima-api-gateway
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
      - job-service
      - match-service
      - ai-service
    networks:
      - proxima-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  proxima-network:
    driver: bridge
